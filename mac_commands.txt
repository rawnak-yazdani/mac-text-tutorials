
/////////////////////////////////////////////////////////////////////////////////

Adding paths to environment variable:

sudo open .zshrc

export PATH=/Library/PostgreSQL/14/bin/:$PATH       // this is not required if PostgreSQL is installed by brew
PROMPT="%F{cyan}%n %1~ %# %f"

source .zshrc

--------------------------------------------------------

sudo open .bash_profile

export PATH=/Library/PostgreSQL/14/bin/:$PATH       // this is not required if PostgreSQL is installed by brew
PROMPT="%F{cyan}%n %1~ %# %f"

source .bash_profile

/////////////////////////////////////////////////////////////////////////////////

PostgreSQL:

To start psql terminal:

brew services start postgresql@14
--------------------------------------------------------
To enter:

psql postgres
or,
psql postgres -U user
or,
To connect to a database under a specific user (from main terminal): psql -d welldev -U rawnakyazdani -W
--------------------------------------------------------
If error occurs:
(Bootstrap failed: 5: Input/output error
Try re-running the command as root for richer errors.
Error: Failure while executing; `/bin/launchctl bootstrap gui/501 /Users/rawnakyazdani/Library/LaunchAgents/homebrew.mxcl.postgresql@14.plist` exited with 5.)
or,
(psql: error: connection to server on socket "/tmp/.s.PGSQL.5432" failed: No such file or directory
	Is the server running locally and accepting connections on that socket?)

solution: rm /usr/local/var/postgresql@14/postmaster.pid
--------------------------------------------------------
To see all databases: \l
--------------------------------------------------------
To see all users: \du
--------------------------------------------------------
To quit from psql: \q
--------------------------------------------------------
To connect to a database: \c myfirstdb
--------------------------------------------------------
To see tables of a database:
select * from pg_catalog.pg_tables where schemaname='public';
or,
\dt
--------------------------------------------------------
SELECT * FROM "schema-name"."table-name";
or,
SELECT * FROM "table-name";
or,
TABLE "table-name";
--------------------------------------------------------
To clear screen: \! clear;
--------------------------------------------------------
CREATE ROLE username WITH LOGIN PASSWORD '1111';

ALTER ROLE rawnak CREATEDB;

ALTER USER rawnak WITH PASSWORD '2222';
--------------------------------------------------------
Create database:

CREATE DATABASE myfirstdb;
--------------------------------------------------------
Create table:

CREATE TABLE weather (
    city            varchar(80),
    temp_lo         int,           -- low temperature
    temp_hi         int,           -- high temperature
    prcp            real,          -- precipitation
    date            date
);

CREATE TABLE accounts (
    id			int,
    owner		varchar(80),
    balance         int
);

CREATE TABLE Person (
    id	            SERIAL           PRIMARY KEY,
    name            varchar(80)      NOT NULL       DEFAULT '',
    country         varchar(80)      DEFAULT NULL
);

CREATE TABLE illuminati (
   id               SERIAL             PRIMARY KEY,
   name             VARCHAR(80)        NOT NULL,
   country          VARCHAR(80)        NOT NULL,
   designation      VARCHAR(80),
   balance          INT                NOT NULL
);
--------------------------------------------------------
CREATE SEQUENCE project_seq
INCREMENT 1
START 1;
--------------------------------------------------------
drop sequence project_seq;
--------------------------------------------------------
drop table actor, director, genre, movie, movie_actors, movie_genre;
--------------------------------------------------------
Inserting into a table:

INSERT INTO accounts (id, title, author_id)
INSERT INTO accounts (id, owner, balance) VALUES (1, 'Rawnak', 100);
INSERT INTO accounts (id, owner, balance) VALUES (2, 'Arnob', 100);
INSERT INTO accounts (id, owner, balance) VALUES (3, 'Abir', 100);
--------------------------------------------------------
UPDATE accounts
SET owner = 'Abir', balance = 200
WHERE
id = 3;
--------------------------------------------------------
DELETE FROM accounts WHERE condition;
--------------------------------------------------------
To see transaction isolation level: SHOW TRANSACTION ISOLATION LEVEL;
--------------------------------------------------------
To begin a transaction: BEGIN;
--------------------------------------------------------
To set transaction isolation level: SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;
--------------------------------------------------------
To check READ UNCOMMITTED:

BEGIN; (t1)
    BEGIN; (t2)
SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED; (t1)
SHOW TRANSACTION ISOLATION LEVEL; (t1)
    SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED; (t2)
    SHOW TRANSACTION ISOLATION LEVEL; (t2)

SELECT * FROM accounts; (T1)
    SELECT * FROM accounts WHERE ID = 1; (T2)
UPDATE accounts SET BALANCE = BALANCE - 10 WHERE ID = 1 RETURNING *; (T1)
    SELECT * FROM accounts WHERE ID = 1; (T2)
COMMIT; (T1)
    SELECT * FROM accounts WHERE ID = 1; (T2)
--------------------------------------------------------
To check READ COMMITTED:

BEGIN; (t1)
    BEGIN; (t2)
SET TRANSACTION ISOLATION LEVEL READ COMMITTED; (t1)
SHOW TRANSACTION ISOLATION LEVEL; (t1)
    SET TRANSACTION ISOLATION LEVEL READ COMMITTED; (t2)
    SHOW TRANSACTION ISOLATION LEVEL; (t2)

SELECT * FROM accounts; (T1)
    SELECT * FROM accounts WHERE ID = 1; (T2)
    SELECT * FROM accounts WHERE BALANCE >= 90; (T2)
UPDATE accounts SET BALANCE = BALANCE - 10 WHERE ID = 1 RETURNING *; (T1)
    SELECT * FROM accounts WHERE ID = 1; (T2)
COMMIT; (T1)
    SELECT * FROM accounts WHERE ID = 1; (T2)
    SELECT * FROM accounts WHERE BALANCE >= 90; (T2)
    COMMIT; (T2)
--------------------------------------------------------
To check REPEATABLE READ:

BEGIN; (t1)
    BEGIN; (t2)
SET TRANSACTION ISOLATION LEVEL REPEATABLE READ; (t1)
SHOW TRANSACTION ISOLATION LEVEL; (t1)
    SET TRANSACTION ISOLATION LEVEL REPEATABLE READ; (t2)
    SHOW TRANSACTION ISOLATION LEVEL; (t2)

SELECT * FROM accounts; (T1)
    SELECT * FROM accounts WHERE ID = 1; (T2)
    SELECT * FROM accounts WHERE BALANCE >= 80; (T2)
UPDATE accounts SET BALANCE = BALANCE - 10 WHERE ID = 1 RETURNING *; (T1)
COMMIT; (T1)
    SELECT * FROM accounts WHERE ID = 1; (T2)
    SELECT * FROM accounts WHERE BALANCE >= 80; (T2)
    UPDATE accounts SET BALANCE = BALANCE - 10 WHERE ID = 1 RETURNING *; (T2)   [GIVES WRONG RESULT IN MYSQL, BUT ERROR IN POSTGRESQL]
    ROLLBACK; (T2)
--------------------------------------------------------
To check serialization anomaly:

BEGIN; (t1)
    BEGIN; (t2)
SET TRANSACTION ISOLATION LEVEL REPEATABLE READ; (t1)
SHOW TRANSACTION ISOLATION LEVEL; (T1)
    SET TRANSACTION ISOLATION LEVEL REPEATABLE READ; (t2)
    SHOW TRANSACTION ISOLATION LEVEL; (T2)

SELECT * FROM accounts; (T1)
SELECT SUM(balance) FROM accounts; (T1)
INSERT INTO accounts(id, owner, balance) VALUES (3, 'sum', 200); (T1)
SELECT * FROM accounts; (T1)
    SELECT * FROM accounts; (T2)
    SELECT SUM(balance) FROM accounts; (T2)
    INSERT INTO accounts(id, owner, balance) VALUES (3, 'sum', 200); (T2)
    SELECT * FROM accounts; (T2)
COMMIT; (T1)
    COMMIT; (T2)

SELECT * FROM accounts; (NORMAL DATABASE)
--------------------------------------------------------
To check SERIALIZABLE:

BEGIN; (t1)
    BEGIN; (t2)
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE; (t1)
SHOW TRANSACTION ISOLATION LEVEL; (T1)
    SET TRANSACTION ISOLATION LEVEL SERIALIZABLE; (t2)
    SHOW TRANSACTION ISOLATION LEVEL; (T2)

SELECT * FROM accounts; (T1)
SELECT SUM(balance) FROM accounts; (T1)
INSERT INTO accounts(id, owner, balance) VALUES (3, 'sum', 200); (T1)
SELECT * FROM accounts; (T1)
    SELECT * FROM accounts; (T2)
    SELECT SUM(balance) FROM accounts; (T2)
    INSERT INTO accounts(id, owner, balance) VALUES (3, 'sum', 200); (T2)
    SELECT * FROM accounts; (T2)
COMMIT; (T1)
    COMMIT; (T2)

SELECT * FROM accounts; (NORMAL DATABASE)
--------------------------------------------------------
To see pg_hba.conf file location: SHOW hba_file;
--------------------------------------------------------
If password is ignored while connecting to the database:

Step 1:
Open pg_hba.conf file (Generally in mac: /usr/local/var/postgresql@14/pg_hba.conf)

Step 2:
Change "trust" to "md5" for the both lines of IPv4 and IPv6 in pg_hba.conf

# IPv4 local connections:
host    all         all         127.0.0.1/32          md5
# IPv6 local connections:
host    all         all         ::1/128               md5
--------------------------------------------------------
To stop psql terminal:

brew services stop postgresql@14

/////////////////////////////////////////////////////////////////////////////////

brew:

brew doctor
brew update

/////////////////////////////////////////////////////////////////////////////////

maven:

mvn --version

mvn archetype:generate -DgroupId=com.mycompany.app -DartifactId=my-app -DarchetypeArtifactId=maven-archetype-quickstart -DarchetypeVersion=1.4 -DinteractiveMode=false

mvn archetype:generate -DgroupId=io.welldev -DartifactId=spring-mvc -DarchetypeArtifactId=maven-archetype-webapp -DarchetypeVersion=1.4

cd my-app

mvn package

java -cp target/my-app-1.0-SNAPSHOT.jar com.mycompany.app.App

--------------------------------------------------------

execute maven project from terminal with the help of pom.xml:

pom.xml:

<build>
    <plugins>
        <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>exec-maven-plugin</artifactId>
            <version>1.4.0</version>
            <configuration>
                <mainClass>io.welldev.Main</mainClass>
            </configuration>
        </plugin>
    </plugins>
</build>

<dependencies>
    <dependency>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>exec-maven-plugin</artifactId>
        <version>1.4.0</version>
    </dependency>
</dependencies>

in terminal: mvn exec:java

/////////////////////////////////////////////////////////////////////////////////

tomcat:

start server:
sh catalina.sh start
or,
./catalina.sh start

--------------------------------------------------------

stop server:
sh catalina.sh stop
or,
./catalina.sh stop

/////////////////////////////////////////////////////////////////////////////////






